openapi: 3.0.0
info:
  title: User API
  version: 1.0.0
paths:
  /hotel:
    get:
      tags:
        - Hotel
      summary: Get hotel by name
      description: Retrieve a hotel by its name.
      parameters:
        - in: query
          name: name
          schema:
            type: string
          required: true
          description: The name of the hotel to retrieve.
      responses:
        '200':
          description: Hotel found successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hotel'
        '400':
          description: Bad request

    post:
      tags:
        - Hotel
      summary: Create a new hotel
      description: Create a new hotel profile.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hotel' # Reference to the Hotel schema
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                User_id:
                  type: string
                  description: Hotel administrator user ID
                name:
                  type: string
                  description: Name of the hotel
                country:
                  type: string
                  description: Country where the hotel is located
                state:
                  type: string
                  description: State where the hotel is located
                address:
                  type: string
                  description: Address where the hotel is located
                phone:
                  type: number
                  description: Phone number of hotel contact
                website:
                  type: string
                  format: url
                  description: Website of the hotel
                email:
                  type: string
                  format: email
                  description: Email address of the hotel
                image:
                  type: array
                  description: List of images related to the hotel
                  items:
                    type: string
                    format: url
                    description: URL of an image
                  maxItems: 5
                category:
                  type: number
                  description: Category of the hotel
                services:
                  type: array
                  description: List of services offered by the hotel
                  items:
                    type: string
                    enum:
                      - all inclusive
                      - breakfast
                      - lunch
                      - dinner
                      - bar
                  default: ['no services']
                room:
                  type: object
                  properties:
                    name:
                      type: string
                      description: Name of the hotel room
                    price:
                      type: number
                      description: Price of the hotel room
                    stock:
                      type: number
                      description: Available stock of the hotel room
                roomService:
                  type: boolean
                  description: Indicates if room service is available
                wifi:
                  type: boolean
                  description: Indicates if WiFi is available
                isActive:
                  type: boolean
                  description: Indicates if the hotel is active
      responses:
        '201':
          description: Hotel created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hotel' # Reference to the Hotel schema
        '400':
          description: Bad request
        '500':
          description: Internal server error

  /hotel/{search}:
    get:
      tags:
        - Hotel
      summary: Get available hotels for booking
      description: Retrieve a list of available hotels based on search criteria and check-in date.
      parameters:
        - in: path
          name: search
          schema:
            type: string
          required: true
          description: Search keyword for hotel name, country, or city.
        - in: query
          name: checkInDate
          schema:
            type: string
            format: date
          description: Check-in date (optional). If not provided, defaults to the current date.
      responses:
        '200':
          description: List of available hotels.
          content:
            application/json:
              example:
                - _id: 64ea24aab659c7e9e16bec41
                  name: Decameron Hotel
                  country: Colombia
                  state: Cartagena
                  email: decameron@gmail.com.us
                  website: decameron.com.co
                  phone: 57 719 864 188
                  address: Kr 20 16-50
                  category: 4
                  rating: 8.5
                  image:
                    - id: dcb6bdef-883e-44b0-b0ac-c2a7a633583a
                      src: https://example.com/dcb6bdef-883e-44b0-b0ac-c2a7a633583a.jpg
                      type: .jpg
                    - id: 2309bc5d-c443-4f33-b711-db07b32fe663
                      src: https://example.com/2309bc5d-c443-4f33-b711-db07b32fe663.jpg
                      type: .jpg
                  freeRooms:
                    - _id: 64ea25316d3ae8d87e497a45
                      name: Standard Room
                      free: 8
                      promisesOfRelease: 2
                      totalFree: 10
                    - _id: 64ea253d1f0e923184b21126
                      name: VIP
                      free: 10
                      promisesOfRelease: 6
                      totalFree: 16
        '404':
          description: No available hotels found.
          content:
            application/json:
              example:
                message: There are no hotels available.
        '400':
          description: Bad request.
          content:
            application/json:
              example:
                error: Invalid request parameters.

components:
  schemas:
    Hotel:
      type: object
      properties:
        _id:
          type: string
          description: Mongo ID when creating hotel record
        User_id:
          type: string
          description: Hotel administrator user ID
        name:
          type: string
          description: Name of the hotel
        country:
          type: string
          description: Country where the hotel is located
        state:
          type: string
          description: State where the hotel is located
        address:
          type: string
          description: Address of the hotel
        phone:
          type: number
          description: Phone number of hotel contact
        website:
          type: string
          format: url
          description: Website of the hotel
        email:
          type: string
          format: email
          description: Email address of the hotel
        images:
          type: array
          description: List of images related to the hotel
          items:
            type: object
            properties:
              id:
                type: string
                description: ID of the image
              src:
                type: string
                description: URL of the image
              type:
                type: string
                description: Type of the image
          maxItems: 5
        category:
          type: number
          description: Category of the hotel
        rating:
          type: number
          description: Rating of the hotel in the FindHotel website
        services:
          type: array
          description: List of services offered by the hotel
          items:
            type: string
            enum:
              - all inclusive
              - breakfast
              - lunch
              - dinner
              - bar
          default: ['no services']
        room:
          type: object
          properties:
            name:
              type: string
              description: Name of the hotel room
            price:
              type: number
              description: Price of the hotel room
            stock:
              type: number
              description: Available stock of the hotel room
        roomService:
          type: boolean
          description: Indicates if room service is available
        wifi:
          type: boolean
          description: Indicates if WiFi is available
        isActive:
          type: boolean
          description: Indicates if the hotel is active
      example:
        _id: '64ea229648743bcdc60e7732'
        User_id: '64ea22abf577a330319f6425'
        name: Hilton Hotel
        country: United States
        state: California
        address: 123 Example Street
        phone: 365 272 5673
        email: hilton@gmail.com.us
        website: hotelhilton.com
        image:
          - id: b7b78083-8bb5-40f3-8a32-c68efdf9d0d5
            src: https://example.com/b7b78083-8bb5-40f3-8a32-c68efdf9d0d5.jpg
            type: .jpg
          - id: 4b4f1077-d8b5-4e50-a68c-11c8d57bdbd5
            src: https://example.com/4b4f1077-d8b5-4e50-a68c-11c8d57bdbd5.jpg
            type: .jpg
        category: 5
        rating: 9.5
        services:
          - breakfast
          - bar
        room:
          name: Deluxe Room
          price: 200
          stock: 10
        roomService: true
        wifi: true
        isActive: true
